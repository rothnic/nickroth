---
import { ClientRouter } from "astro:transitions";
import Navbar from '../components/Navbar.astro';

export interface Props {
  title?: string;
  description?: string;
  showNavbar?: boolean;
}

const {
  title = "Nick Roth - Product Systems & AI Director",
  description = "Portfolio and operating playbook for Nick Roth",
  showNavbar = true
} = Astro.props;

const currentPath = Astro.url.pathname;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content={description} />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <link
      rel="preconnect"
      href="https://fonts.googleapis.com"
      crossorigin
    />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&family=Space+Grotesk:wght@500;600;700&display=swap"
      rel="stylesheet"
    />
    <title>{title}</title>
    <ClientRouter />
    <script src="/src/scripts/theme.js"></script>
  </head>
  <style is:global>
    :root {
      --glass-border: rgba(12, 27, 37, 0.08);
      --glass-background: rgba(255, 255, 255, 0.7);
      --glass-background-dark: rgba(15, 23, 42, 0.7);
      --glass-shadow: 0 24px 60px -40px rgba(15, 23, 42, 0.55);
      --grid-color-light: rgba(12, 27, 37, 0.04);
      --grid-color-dark: rgba(148, 163, 184, 0.05);
      --accent-gradient: linear-gradient(135deg, oklch(0.65 0.2 140) 0%, oklch(0.7 0.2 320) 50%, oklch(0.7 0.15 60) 100%);
      color-scheme: light dark;
    }

    body {
      font-family: 'Inter', system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;
      color: inherit;
      background-color: transparent;
      text-rendering: optimizeLegibility;
      -webkit-font-smoothing: antialiased;
    }

    ::selection {
      background: oklch(0.65 0.2 140 / 0.18);
      color: inherit;
    }

    .bg-grid {
      position: relative;
      background-image:
        linear-gradient(90deg, var(--grid-color-light) 1px, transparent 1px),
        linear-gradient(0deg, var(--grid-color-light) 1px, transparent 1px);
      background-size: 48px 48px;
    }

    :is(html.dark) .bg-grid {
      background-image:
        linear-gradient(90deg, var(--grid-color-dark) 1px, transparent 1px),
        linear-gradient(0deg, var(--grid-color-dark) 1px, transparent 1px);
    }

    .glass-panel {
      background: var(--glass-background);
      border: 1px solid var(--glass-border);
      box-shadow: var(--glass-shadow);
      backdrop-filter: blur(22px);
    }

    html.dark .glass-panel {
      background: var(--glass-background-dark);
      border-color: rgba(148, 163, 184, 0.12);
      box-shadow: 0 24px 60px -40px rgba(15, 23, 42, 0.85);
    }

    .glass-tile {
      background: rgba(255, 255, 255, 0.55);
      border: 1px solid rgba(12, 27, 37, 0.08);
      border-radius: 1.5rem;
      padding: 1.5rem;
      transition: transform 500ms var(--ease-out-quint, cubic-bezier(0.22, 1, 0.36, 1)),
        border-color 400ms ease, background 400ms ease, box-shadow 400ms ease;
    }

    html.dark .glass-tile {
      background: rgba(15, 23, 42, 0.7);
      border-color: rgba(148, 163, 184, 0.12);
    }

    .glass-tile:hover {
      transform: translateY(-6px);
      border-color: rgba(12, 27, 37, 0.25);
      background: rgba(255, 255, 255, 0.7);
      box-shadow: 0 28px 70px -48px rgba(15, 23, 42, 0.45);
    }

    html.dark .glass-tile:hover {
      border-color: rgba(148, 163, 184, 0.3);
      background: rgba(15, 23, 42, 0.78);
      box-shadow: 0 28px 70px -48px rgba(15, 23, 42, 0.75);
    }

    .glass-stat {
      background: rgba(255, 255, 255, 0.65);
      border: 1px solid rgba(12, 27, 37, 0.08);
      border-radius: 1.25rem;
      padding: 1.25rem;
      backdrop-filter: blur(18px);
      transition: transform 300ms ease, border-color 300ms ease;
    }

    html.dark .glass-stat {
      background: rgba(15, 23, 42, 0.7);
      border-color: rgba(148, 163, 184, 0.12);
    }

    .glass-stat:hover {
      transform: translateY(-4px);
      border-color: rgba(12, 27, 37, 0.18);
    }

    html.dark .glass-stat:hover {
      border-color: rgba(148, 163, 184, 0.25);
    }

    .btn-gradient {
      position: relative;
      display: inline-flex;
      align-items: center;
      justify-content: center;
      gap: 0.5rem;
      padding: 0.9rem 1.6rem;
      border-radius: 999px;
      font-weight: 600;
      color: white;
      background-image: var(--accent-gradient);
      box-shadow: 0 18px 45px -25px rgba(15, 23, 42, 0.5);
      transition: transform 250ms ease, box-shadow 250ms ease;
    }

    .btn-gradient:hover {
      transform: translateY(-2px);
      box-shadow: 0 22px 50px -20px rgba(12, 27, 37, 0.55);
    }

    .btn-outline-ghost {
      display: inline-flex;
      align-items: center;
      gap: 0.5rem;
      padding: 0.85rem 1.5rem;
      border-radius: 999px;
      font-weight: 600;
      border: 1px solid rgba(12, 27, 37, 0.12);
      background: rgba(255, 255, 255, 0.4);
      backdrop-filter: blur(16px);
      transition: border-color 250ms ease, transform 250ms ease, background 250ms ease;
    }

    html.dark .btn-outline-ghost {
      border-color: rgba(148, 163, 184, 0.15);
      background: rgba(15, 23, 42, 0.6);
      color: rgba(248, 250, 252, 0.9);
    }

    .btn-outline-ghost:hover {
      transform: translateY(-2px);
      border-color: rgba(12, 27, 37, 0.25);
      background: rgba(255, 255, 255, 0.6);
    }

    html.dark .btn-outline-ghost:hover {
      border-color: rgba(148, 163, 184, 0.3);
      background: rgba(15, 23, 42, 0.75);
    }

    .badge-pill {
      display: inline-flex;
      align-items: center;
      gap: 0.4rem;
      border-radius: 999px;
      padding: 0.35rem 0.8rem;
      font-size: 0.75rem;
      font-weight: 600;
      letter-spacing: 0.08em;
      text-transform: uppercase;
      border: 1px solid rgba(12, 27, 37, 0.15);
      background: rgba(255, 255, 255, 0.4);
    }

    html.dark .badge-pill {
      border-color: rgba(148, 163, 184, 0.2);
      background: rgba(15, 23, 42, 0.6);
      color: rgba(248, 250, 252, 0.8);
    }

    .animate-float {
      animation: float 10s ease-in-out infinite;
    }

    .animate-pulse-slow {
      animation: pulse 8s ease-in-out infinite;
    }

    .animate-gradient-x {
      animation: gradientShift 6s ease infinite;
      background-size: 200% 200%;
    }

    .animate-float-line {
      animation: floatLine 5s ease-in-out infinite;
      transform-origin: left;
    }

    .animate-orbit {
      animation: orbit 14s linear infinite;
      transform-origin: center;
    }

    @keyframes float {
      0%, 100% {
        transform: translate3d(0, 0, 0);
      }
      50% {
        transform: translate3d(0, -12px, 0);
      }
    }

    @keyframes pulse {
      0%, 100% {
        opacity: 0.35;
      }
      50% {
        opacity: 0.7;
      }
    }

    @keyframes gradientShift {
      0% {
        background-position: 0% 50%;
      }
      50% {
        background-position: 100% 50%;
      }
      100% {
        background-position: 0% 50%;
      }
    }

    @keyframes floatLine {
      0%, 100% {
        transform: translateX(0);
      }
      50% {
        transform: translateX(6px);
      }
    }

    @keyframes orbit {
      0% {
        transform: rotate(0deg) translateX(0);
      }
      50% {
        transform: rotate(180deg) translateX(4px);
      }
      100% {
        transform: rotate(360deg) translateX(0);
      }
    }

    @media (prefers-reduced-motion: reduce) {
      .animate-float,
      .animate-pulse-slow,
      .animate-gradient-x,
      .animate-float-line,
      .animate-orbit {
        animation-duration: 1ms !important;
        animation-iteration-count: 1 !important;
      }
    }
  </style>
  <body class="bg-base-100 text-base-content">
    <div class="relative flex min-h-screen flex-col overflow-hidden">
      <div class="pointer-events-none absolute inset-0 -z-10">
        <div class="bg-grid absolute inset-0 opacity-60 dark:opacity-40"></div>
        <div class="absolute -top-32 left-1/2 h-[580px] w-[580px] -translate-x-1/2 rounded-full bg-primary/15 blur-3xl"></div>
        <div class="absolute -bottom-40 right-[-15%] h-[520px] w-[520px] rounded-full bg-accent/15 blur-3xl"></div>
      </div>
      {showNavbar && <Navbar currentPath={currentPath} />}
      <main class="flex-1">
        <slot />
      </main>
    </div>
  </body>
</html>
