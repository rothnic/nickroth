---
const capabilities = [
  { icon: "database", label: "HEADLESS CMS", color: "#06b6d4" },
  { icon: "brain", label: "AI & AUTOMATION", color: "#84cc16" },
  { icon: "chrome", label: "CHROME EXTENSIONS", color: "#fde047" },
  { icon: "globe", label: "WEB PLATFORMS", color: "#c026d3" },
  { icon: "zap", label: "MARKETING AUTOMATION", color: "#06b6d4" },
  { icon: "code", label: "SYSTEMS & PRD", color: "#84cc16" },
  { icon: "line-chart", label: "SEARCH & DATA", color: "#fde047" },
  { icon: "cog", label: "A/B TESTING", color: "#c026d3" },
];

const iconMap: Record<string, string> = {
  database:
    '<svg class="w-5 h-5 text-black" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><ellipse cx="12" cy="5" rx="9" ry="3"/><path d="M3 5v6c0 1.657 4.03 3 9 3s9-1.343 9-3V5"/><path d="M3 11v6c0 1.657 4.03 3 9 3s9-1.343 9-3v-6"/></svg>',
  brain:
    '<svg class="w-5 h-5 text-black" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M12 6a2 2 0 0 1 2-2 3 3 0 0 1 3 3v1h2a2 2 0 0 1 0 4h-1"/><path d="M12 6a2 2 0 0 0-2-2 3 3 0 0 0-3 3v1H5a2 2 0 0 0 0 4h1"/><path d="M8 14h.01"/><path d="M16 14h.01"/><path d="M9 18h1a2 2 0 0 1 2 2v1"/><path d="M15 18h-1a2 2 0 0 0-2 2v1"/></svg>',
  chrome:
    '<svg class="w-5 h-5 text-black" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="10"/><circle cx="12" cy="12" r="4"/><path d="M21.17 8H12"/><path d="M3.95 6.06 8.54 14"/><path d="M10.88 21.94 15.46 14"/></svg>',
  globe:
    '<svg class="w-5 h-5 text-black" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="10"/><path d="M2 12h20"/><path d="M12 2a15.3 15.3 0 0 1 4 10 15.3 15.3 0 0 1-4 10 15.3 15.3 0 0 1-4-10 15.3 15.3 0 0 1 4-10z"/></svg>',
  zap: '<svg class="w-5 h-5 text-black" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><polyline points="13 2 3 14 12 14 11 22 21 10 12 10 13 2"/></svg>',
  code: '<svg class="w-5 h-5 text-black" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><polyline points="16 18 22 12 16 6"/><polyline points="8 6 2 12 8 18"/></svg>',
  "line-chart":
    '<svg class="w-5 h-5 text-black" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M3 3v18h18"/><path d="m19 9-5 5-4-4-3 3"/></svg>',
  cog: '<svg class="w-5 h-5 text-black" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M12 15a3 3 0 1 0 0-6 3 3 0 0 0 0 6z"/><path d="M19.4 15a1.65 1.65 0 0 0 .33 1.82l.06.06a2 2 0 1 1-2.83 2.83l-.06-.06a1.65 1.65 0 0 0-1.82-.33 1.65 1.65 0 0 0-1 1.51V21a2 2 0 0 1-4 0v-.09a1.65 1.65 0 0 0-1-1.51 1.65 1.65 0 0 0-1.82.33l-.06.06a2 2 0 1 1-2.83-2.83l.06-.06a1.65 1.65 0 0 0 .33-1.82 1.65 1.65 0 0 0-1.51-1H3a2 2 0 0 1 0-4h.09a1.65 1.65 0 0 0 1.51-1 1.65 1.65 0 0 0-.33-1.82l-.06-.06a2 2 0 1 1 2.83-2.83l.06.06a1.65 1.65 0 0 0 1.82.33H9a1.65 1.65 0 0 0 1-1.51V3a2 2 0 0 1 4 0v.09a1.65 1.65 0 0 0 1 1.51 1.65 1.65 0 0 0 1.82-.33l.06-.06a2 2 0 1 1 2.83 2.83l-.06.06a1.65 1.65 0 0 0-.33 1.82V9a1.65 1.65 0 0 0 1.51 1H21a2 2 0 0 1 0 4h-.09a1.65 1.65 0 0 0-1.51 1z"/></svg>',
};

const techStack = [
  "React",
  "Next.js",
  "TypeScript",
  "Node.js",
  "Python",
  "OpenAI",
  "Supabase",
  "Stripe",
  "Figma",
  "Linear",
  "Framer",
  "Tailwind",
  "Headless CMS",
  "Chrome APIs",
];

const rotations = ['rotate-1', '-rotate-2', 'rotate-2', '-rotate-1', '-rotate-2'];
const scrollingCapabilities = [...capabilities, ...capabilities];
---

<div class="max-w-7xl mx-auto px-6 py-1">
  <div class="text-center mb-16">
    <div
      class="inline-block bg-lime-400 text-black border-4 border-white px-8 py-4 shadow-[6px_6px_0px_0px_rgba(255,255,255,1)] mb-6"
    >
      <h2 class="text-3xl md:text-4xl font-black">FULL-STACK CAPABILITIES</h2>
    </div>
    <p class="text-xl text-white max-w-3xl mx-auto leading-relaxed">
      From strategy to shipping â€” I bridge the gap between business objectives and technical
      execution across the entire product lifecycle.
    </p>
  </div>

  <div class="relative py-0 mb-20 pointer-events-none">
    <div class="overflow-hidden mb-12 py-4">
      <div class="flex gap-6 w-max animate-marquee-left py-0">
        {
          scrollingCapabilities.map((item, index) => (
            <div
              class={`badge badge-lg gap-2 px-6 py-4 border-4 border-white shadow-[4px_4px_0px_0px_rgba(255,255,255,1)] ${rotations[index % rotations.length]}`}
              style={`background-color: ${item.color};`}
            >
              <span aria-hidden="true" set:html={iconMap[item.icon]} />
              <span class="font-black text-black text-base">{item.label}</span>
            </div>
          ))
        }
      </div>
    </div>

    <div class="overflow-hidden py-4">
      <div class="flex gap-6 w-max animate-marquee-right py-0">
        {
          [...scrollingCapabilities].reverse().map((item, index) => (
            <div
              class={`badge badge-lg gap-2 px-6 py-4 border-4 border-white shadow-[4px_4px_0px_0px_rgba(255,255,255,1)] ${rotations[(index + 2) % rotations.length]}`}
              style={`background-color: ${item.color};`}
            >
              <span aria-hidden="true" set:html={iconMap[item.icon]} />
              <span class="font-black text-black text-base">{item.label}</span>
            </div>
          ))
        }
      </div>
    </div>
  </div>

  <div class="card card-lg my-10">
    <div
      class="card-body items-center text-center"
    >
      <h3 class="card-title text-4xl">TECH STACK</h3>
      <div class="flex flex-wrap justify-center gap-3">
        {
          techStack.map((tech, index) => (
            <span
              class="badge badge-lg bg-neutral" 
              style={`transition-delay: ${index * 50}ms`}
            >
              {tech}
            </span>
          ))
        }
      </div>
    </div>
  </div>
</div>
