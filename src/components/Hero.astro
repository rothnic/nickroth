---
import { Image } from "astro:assets";
import headshot from "../assets/images/nick-headshot.png";
import Zap from "./icons/Zap.astro";
import Brain from "./icons/Brain.astro";
import Code from "./icons/Code.astro";
import ArrowDown from "./icons/ArrowDown.astro";
---

<section
  id="hero"
  class="hero-bg pt-1 pb-8 relative overflow-hidden"
>
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-10">
    <div class="text-center space-y-25">
      <div class="flex justify-center flex-wrap gap-4 mb-20">
        <span 
          class="badge badge-lg badge-height-lg badge-secondary -rotate-5 rotate-smooth animate-pop-in delay-1 hover-scale-up hover-rotate-wiggle hover-shadow-boost" 
          
        >
          <Zap />
          FULL-STACK PM
        </span>
        <span 
          class="badge badge-lg badge-height-lg badge-info rotate-smooth animate-pop-in delay-2 hover-scale-up hover-rotate-wiggle-neg hover-shadow-boost" 
          style="transform: rotate(5deg); opacity: 0"
        >
          <Brain />
          AI ENGINEER
        </span>
        <span 
          class="badge badge-lg badge-height-lg badge-warning rotate-smooth animate-pop-in delay-3 hover-scale-up hover-rotate-wiggle hover-shadow-boost" 
          style="transform: rotate(-3deg); opacity: 0"
        >
          <Code />
          AUTOMATION
        </span>
      </div>

      <div class="flex flex-col lg:flex-row items-center justify-center gap-12 lg:gap-20">
        <div class="order-2 lg:order-1">
          <h1 class="text-7xl md:text-9xl font-display font-black hero-title leading-none">
            <span class="glitch-effect" data-text="NICK">NICK</span>
            <br />
            <span class="hero-title-badge transform -rotate-2">
              <span class="glitch-effect" data-text="ROTH">ROTH</span>
            </span>
          </h1>
        </div>

        <div class="order-1 lg:order-2 relative group" data-hero-hover>
          <div
            class="absolute -inset-8 pointer-events-none select-none"
            aria-hidden="true"
            data-hero-backdrop
          >
            <div
              class="hero-decoration absolute top-0 left-0 w-20 h-20 bg-accent border-[4px] shadow-[4px_4px_0px_0px_var(--nr-shadow-color)] opacity-70 animate-spin-slow"
            >
            </div>
            <div
              class="hero-decoration absolute bottom-4 right-4 w-16 h-16 bg-primary rounded-full border-[4px] shadow-[6px_6px_0px_0px_var(--nr-shadow-color)] opacity-70 animate-bounce-slow"
            >
            </div>
            <div
              class="hero-decoration absolute top-1/2 right-0 w-12 h-24 bg-warning border-[4px] shadow-[4px_4px_0px_0px_var(--nr-shadow-color)] opacity-70 rotate-45 animate-sway"
            >
            </div>
          </div>

          <div
            class="hero-card-frame bg-hero-gradient relative border-[6px] border-black shadow-[20px_20px_0px_0px_rgba(0,0,0,1)] transform rotate-2 p-3 transition-all duration-300"
            data-hero-card
          >
            <div class="hero-card-inner border-[4px] transform -rotate-1 overflow-hidden">
              <Image
                src={headshot}
                alt="Nick Roth"
                class="w-72 h-72 md:w-96 md:h-96 object-cover border-[3px] border-[var(--nr-border-color)]"
                widths={[288, 384, 576, 768]}
                sizes="(max-width: 768px) 288px, 384px"
                loading="eager"
                fetchpriority="high"
                format="webp"
                quality={85}
                data-hero-image
              />
            </div>
          </div>

          <span 
            class="badge badge-md badge-height-md badge-primary absolute top-[-1rem] right-[-1rem] rotate-smooth animate-pop-in delay-4 hover-scale-up hover-rotate-wiggle-neg hover-shadow-boost" 
            style="transform: rotate(12deg); opacity: 0"
          >
            PRODUCT
          </span>
          <span 
            class="badge badge-md badge-height-md badge-warning absolute bottom-[-1rem] left-[-1rem] rotate-smooth animate-pop-in delay-5 hover-scale-up hover-rotate-wiggle hover-shadow-boost" 
            style="transform: rotate(-12deg); opacity: 0"
          >
            ENGINEER
          </span>
          <span 
            class="badge badge-sm badge-height-sm badge-secondary absolute top-[50%] right-[-1rem] rotate-smooth animate-pop-in delay-6 hover-scale-up hover-rotate-wiggle-neg hover-shadow-boost" 
            style="transform: rotate(90deg); opacity: 0"
          >
            AI
          </span>
          <span 
            class="badge badge-sm badge-height-sm badge-neutral font-mono absolute top-[-1.5rem] left-[3rem] rotate-smooth animate-pop-in delay-4 hover-scale-up hover-rotate-wiggle hover-shadow-boost" 
            style="transform: rotate(-6deg); opacity: 0"
          >
            GT MS
          </span>
        </div>
      </div>

      <div class="max-w-4xl mx-auto relative">
        <div
          class="card p-8 transform -rotate-1 relative z-10"
        >
          <p class="text-2xl md:text-3xl leading-relaxed">
            I turn business objectives into <span
              class="font-mono bg-secondary/60 px-2 border border-[var(--nr-border-color)] whitespace-nowrap">shippable systems</span
            > â€” model the business, specify precisely, and build only what moves the needle.
          </p>
        </div>
        <div
          class="hero-decoration absolute -top-4 -right-4 w-20 h-20 bg-primary border-[4px] shadow-[6px_6px_0px_0px_var(--nr-shadow-color)] transform rotate-12"
          aria-hidden="true"
        >
        </div>
        <div
          class="hero-decoration absolute -bottom-6 -left-6 w-16 h-24 bg-accent border-[4px] shadow-[4px_4px_0px_0px_var(--nr-shadow-color)] transform -rotate-6"
          aria-hidden="true"
        >
        </div>
      </div>

      <div class="flex flex-col items-center gap-6">
        <div class="flex flex-col sm:flex-row gap-6 justify-center items-center">
          <a
            href="#projects"
            data-smooth-scroll
            class="btn btn-info btn-xl border-info"
          >
            VIEW MY WORK
          </a>
          <a
            href="#contact"
            data-smooth-scroll
            class="btn btn-xl btn-rotate-neg"
          >
            LET'S TALK
          </a>
        </div>

        <div class="mt-4 animate-bounce">
          <a
            href="#process"
            data-smooth-scroll
            class="btn btn-square"
          >
            <span class="sr-only">Scroll to process</span>
            <ArrowDown />
          </a>
        </div>
      </div>
    </div>
  </div>

  <script>
    import type { AnimationPlaybackControls } from "motion";
    import { animate } from "motion";

    type KeyframeTargets = Record<string, string | number>;
    type AnimationMap = Map<Element, AnimationPlaybackControls>;

    const setupHeroMotion = () => {
      if (!window.matchMedia("(hover: hover)").matches) {
        return;
      }

      const hoverRegion = document.querySelector<HTMLElement>("[data-hero-hover]");
      const card = hoverRegion?.querySelector<HTMLElement>("[data-hero-card]");
      const image = hoverRegion?.querySelector<HTMLElement>("[data-hero-image]");
      const backdrop = hoverRegion?.querySelector<HTMLElement>(
        "[data-hero-backdrop]",
      );

      if (!hoverRegion || !card || !image) {
        return;
      }

      const activeAnimations: AnimationMap = new Map();

      const animateTo = (
        element: Element | null | undefined,
        keyframes: KeyframeTargets,
        duration = 0.35,
      ) => {
        if (!element) return;

        activeAnimations.get(element)?.stop();

        const controls = animate(element, keyframes, {
          duration,
          ease: "easeOut",
        });

        activeAnimations.set(element, controls);
      };

      const reset = () => {
        animateTo(card, { rotate: "2deg", scale: 1 }, 0.4);
        animateTo(image, { rotate: "-1deg", scale: 1 }, 0.4);
        animateTo(backdrop, { rotate: "0deg", scale: 1 }, 0.4);
      };

      const onEnter = () => {
        animateTo(card, { rotate: "5deg", scale: 1.05 });
        animateTo(image, { rotate: "0deg", scale: 1.02 });
        animateTo(backdrop, { rotate: "-3deg", scale: 1.03 });
      };

      const onLeave = () => {
        reset();
      };

      const controller = new AbortController();
      const { signal } = controller;

      hoverRegion.addEventListener("pointerenter", onEnter, { signal });
      hoverRegion.addEventListener("pointerleave", onLeave, { signal });

      reset();

      document.addEventListener(
        "astro:before-swap",
        () => {
          controller.abort();
          activeAnimations.forEach((animation) => {
            animation.stop();
          });
          activeAnimations.clear();
        },
        { once: true },
      );
    };

    if (document.readyState === "loading") {
      document.addEventListener("DOMContentLoaded", setupHeroMotion, {
        once: true,
      });
    } else {
      setupHeroMotion();
    }

    document.addEventListener("astro:after-swap", () => {
      requestAnimationFrame(setupHeroMotion);
    });
  </script>
</section>
