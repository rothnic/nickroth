---
import type { CollectionEntry } from 'astro:content';
import BadgeList from './BadgeList.astro';
import MetricsRow from './MetricsRow.astro';
import ProjectPreviewList from './ProjectPreviewList.astro';

interface Props {
  phase: CollectionEntry<'phases'>;
  projects?: Array<CollectionEntry<'projects'>>;
  index: number;
}

const { phase, projects = [], index } = Astro.props;
const { era, title, oneliner, focus, skills, metrics, artifacts, bridge, current, featured } = phase.data;
const phaseId = phase.slug;
---

<details class="collapse collapse-arrow bg-base-100 border-4 border-base-content shadow-brutal" id={phaseId}>
  <summary class="collapse-title px-4 py-3 cursor-pointer">
    <div class="flex items-start justify-between gap-4 flex-wrap">
      <div class="flex-1 min-w-0">
        <div class="flex items-center gap-3 mb-2">
          <span class="font-mono text-sm opacity-70 font-bold">{era}</span>
          {current && (
            <span class="status status-primary status-md" title="Current position"></span>
          )}
        </div>
        <h3 class="font-bold text-lg mb-2 leading-tight">{title}</h3>
        <p class="text-sm opacity-80 mb-3">{oneliner}</p>
        
        {/* Project preview badges - inline */}
        {projects.length > 0 && (
          <ProjectPreviewList projects={projects} phaseSlug={phaseId} />
        )}
      </div>
    </div>
  </summary>
  
  <div class="collapse-content px-4 pb-4">
    {/* Focus bullets */}
    {focus && focus.length > 0 && (
      <div class="mt-4">
        <h4 class="font-bold text-sm mb-2 uppercase">Focus</h4>
        <ul class="list-disc pl-5 space-y-1 text-sm">
          {focus.map((item) => (
            <li>{item}</li>
          ))}
        </ul>
      </div>
    )}
    
    {/* Metrics */}
    {metrics && metrics.length > 0 && (
      <div class="mt-4">
        <MetricsRow metrics={metrics} />
      </div>
    )}
    
    {/* Skills */}
    {skills && skills.length > 0 && (
      <div class="mt-4">
        <h4 class="font-bold text-sm mb-2 uppercase">Skills & Tools</h4>
        <BadgeList items={skills} maxVisible={8} />
      </div>
    )}
    
    {/* Artifacts */}
    {artifacts && artifacts.length > 0 && (
      <div class="mt-4">
        <h4 class="font-bold text-sm mb-2 uppercase">Artifacts</h4>
        <div class="flex flex-wrap gap-2">
          {artifacts.map((artifact) => (
            <a 
              href={artifact.href} 
              class="link link-primary text-sm"
              target={artifact.type === 'link' ? '_blank' : undefined}
              rel={artifact.type === 'link' ? 'noopener noreferrer' : undefined}
            >
              {artifact.label}
            </a>
          ))}
        </div>
      </div>
    )}
    
    {/* Bridge */}
    {bridge && (
      <p class="mt-4 text-sm opacity-70 italic">{bridge}</p>
    )}
  </div>
</details>
