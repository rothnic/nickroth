---
import { Button } from '@/components/retroui/Button';
import { Badge } from '@/components/retroui/Badge';

export interface Props {
  title: string;
  description: string;
  company: string;
  role: string;
  slug: string;
  tags?: string[] | undefined;
  image?: string | undefined;
  category?: string | undefined;
  impact?: string | undefined;
  stack?: string[] | undefined;
  roleCategory?: string | undefined;
}

const { 
  title, 
  description, 
  slug, 
  tags = [], 
  image, 
  category,
  impact,
  stack = [],
  roleCategory
} = Astro.props;

const PLACEHOLDER_IMAGE = 'https://placehold.co/600x400';
const imageSrc = image?.trim() ? image : PLACEHOLDER_IMAGE;

// Display tags and stack combined, limited to 4 with +N indicator
const allTags = [...tags, ...stack];
const displayTags = allTags.slice(0, 4);
const remainingCount = allTags.length - 4;
---

<!-- Clean RetroUI Work Card -->
<div transition:name={`work-container-${slug}`} class="border-2 border-black rounded-none shadow-[4px_4px_0px_0px_#000] bg-card text-card-foreground w-full max-w-lg h-full" data-work-card data-category={category}>
  <!-- Project Image -->
  <div class="p-4 pb-0">
    <div class="border-2 border-black rounded-none shadow-[2px_2px_0px_0px_#000] overflow-hidden">
      <img 
        transition:name={`work-img-${slug}`}
        src={imageSrc} 
        alt={title}
        class="w-full h-48 object-cover"
        loading="lazy"
      />
    </div>
  </div>
  
  <!-- Card Content -->
  <div class="p-6 flex flex-col h-full">
    <h2 transition:name={`work-title-${slug}`} class="text-xl font-bold mb-3 text-foreground leading-tight">{title}</h2>
    
    {impact && (
      <p class="text-sm font-bold text-primary uppercase mb-3 leading-tight tracking-wide">
        {impact}
      </p>
    )}
    
    {roleCategory && (
      <div class="mb-4">
        <Badge variant="solid" size="sm" className="font-bold uppercase tracking-wider">
          {roleCategory}
        </Badge>
      </div>
    )}
    
    <!-- Tags/Stack -->
    {allTags.length > 0 && (
      <div class="flex flex-wrap gap-2 mb-4">
        {displayTags.map((tag) => (
          <Badge variant="outline" size="sm" className="font-medium">
            {tag}
          </Badge>
        ))}
        {remainingCount > 0 && (
          <Badge variant="solid" size="sm" className="font-medium">
            +{remainingCount}
          </Badge>
        )}
      </div>
    )}
    
    <!-- Spacer -->
    <div class="flex-grow"></div>
    
    <!-- View Details Button -->
    <div class="mt-4">
      <Button variant="default" size="sm" client:load>
        <a href={`/work/${slug}`} class="no-underline text-inherit font-medium">
          View Details
        </a>
      </Button>
    </div>
  </div>
</div>