---
export interface Props {
  title: string;
  description: string;
  company: string;
  role: string;
  slug: string;
  tags?: string[] | undefined;
  image?: string | undefined;
  category?: string | undefined;
  impact?: string | undefined;
  stack?: string[] | undefined;
  roleCategory?: string | undefined;
}

const { 
  title, 
  description, 
  slug, 
  tags = [], 
  image, 
  category,
  impact,
  stack = [],
  roleCategory
} = Astro.props;

const PLACEHOLDER_IMAGE = 'https://placehold.co/600x400';
const imageSrc = image?.trim() ? image : PLACEHOLDER_IMAGE;

const getStackColor = (tech: string) => {
  const lowerTech = tech.toLowerCase();
  if (lowerTech.includes('astro') || lowerTech.includes('datocms')) return 'badge-primary';
  if (lowerTech.includes('n8n') || lowerTech.includes('windmill')) return 'badge-warning';
  if (lowerTech.includes('chrome') || lowerTech.includes('openai')) return 'badge-info';
  if (lowerTech.includes('langchain')) return 'badge-success';
  if (tech.includes('+')) return 'badge-success';
  return 'badge-outline';
};

const getTagColor = (tag: string) => {
  const lowerTag = tag.toLowerCase();
  if (lowerTag.includes('headless') || lowerTag.includes('cms')) return 'badge-primary';
  if (lowerTag.includes('web') || lowerTag.includes('platform')) return 'badge-secondary';
  if (lowerTag.includes('marketing') || lowerTag.includes('automation')) return 'badge-accent';
  if (lowerTag.includes('systems')) return 'badge-success';
  return 'badge-outline';
};
---

<a
  transition:name={`work-container-${slug}`}
  href={`/work/${slug}`}
  class="group relative flex h-full flex-col overflow-hidden rounded-3xl border border-white/10 bg-base-100/70 backdrop-blur transition-transform duration-300 hover:-translate-y-2 hover:border-primary/50 hover:shadow-[0_30px_70px_-40px_rgba(76,29,149,0.8)]"
  data-work-card
  data-category={category}
>
  <div class="relative h-48 overflow-hidden">
    <img
      transition:name={`work-img-${slug}`}
      src={imageSrc}
      alt={title}
      class="h-full w-full object-cover transition-transform duration-700 group-hover:scale-105"
      loading="lazy"
    />
    <div class="pointer-events-none absolute inset-0 bg-gradient-to-t from-base-100/80 via-base-100/20 to-transparent opacity-0 transition-opacity duration-500 group-hover:opacity-100"></div>
    {category && (
      <span class="absolute bottom-4 left-4 rounded-full bg-base-100/80 px-3 py-1 text-xs font-semibold uppercase tracking-[0.2rem] text-base-content/70">
        {category}
      </span>
    )}
  </div>

  <div class="flex flex-1 flex-col gap-4 p-6">
    <div class="flex items-start justify-between gap-4">
      <h2 transition:name={`work-title-${slug}`} class="text-xl font-semibold leading-tight text-base-content">
        {title}
      </h2>
      <span class="inline-flex h-10 w-10 items-center justify-center rounded-full border border-primary/40 bg-primary/10 text-primary transition-transform duration-300 group-hover:translate-x-1">
        â†’
      </span>
    </div>

    {impact && (
      <p class="text-sm font-semibold uppercase tracking-wide text-primary">
        {impact}
      </p>
    )}

    {roleCategory && (
      <span class="w-fit rounded-full bg-accent/10 px-3 py-1 text-xs font-semibold uppercase tracking-[0.25rem] text-accent">
        {roleCategory}
      </span>
    )}

    <p class="text-sm leading-relaxed text-base-content/70">{description}</p>

    {tags.length > 0 && (
      <div class="flex flex-wrap gap-2">
        {tags.map((tag) => (
          <span class={`badge ${getTagColor(tag)} badge-sm font-semibold text-[0.65rem] uppercase tracking-wide`}>{tag}</span>
        ))}
      </div>
    )}

    {stack.length > 0 && (
      <div class="flex flex-wrap gap-2">
        {stack.map((tech) => (
          <span class={`badge ${getStackColor(tech)} badge-sm font-medium text-[0.65rem] uppercase tracking-wide`}>{tech}</span>
        ))}
      </div>
    )}

    <div class="mt-auto flex items-center justify-between pt-4 text-xs uppercase tracking-[0.3rem] text-base-content/60">
      <span>Read case study</span>
      <span class="h-px flex-1 ml-4 bg-gradient-to-r from-transparent via-primary/40 to-primary/80"></span>
    </div>
  </div>
</a>