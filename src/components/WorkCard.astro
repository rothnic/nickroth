---
export interface Props {
  title: string;
  description: string;
  company: string;
  role: string;
  slug: string;
  tags?: string[] | undefined;
  image?: string | undefined;
  category?: string | undefined;
  impact?: string | undefined;
  stack?: string[] | undefined;
  roleCategory?: string | undefined;
}

const { 
  title, 
  description, 
  slug, 
  tags = [], 
  image, 
  category,
  impact,
  stack = [],
  roleCategory
} = Astro.props;

const PLACEHOLDER_IMAGE = 'https://placehold.co/600x400';
const imageSrc = image?.trim() ? image : PLACEHOLDER_IMAGE;

// Define color schemes for different categories
const getCategoryColor = (cat: string | undefined) => {
  switch (cat) {
    case 'HEADLESS CMS': return 'badge-primary';
    case 'WEB PLATFORMS': return 'badge-secondary';  
    case 'MARKETING AUTOMATION': return 'badge-accent';
    case 'AUTOMATION & AI': return 'badge-warning';
    case 'CHROME EXTENSIONS': return 'badge-info';
    case 'SYSTEMS': return 'badge-success';
    default: return 'badge-outline';
  }
};

const getStackColor = (tech: string) => {
  const lowerTech = tech.toLowerCase();
  if (lowerTech.includes('astro') || lowerTech.includes('datocms')) return 'badge-primary';
  if (lowerTech.includes('n8n') || lowerTech.includes('windmill')) return 'badge-warning';
  if (lowerTech.includes('chrome') || lowerTech.includes('openai')) return 'badge-info';
  if (lowerTech.includes('langchain')) return 'badge-success';
  if (tech.includes('+')) return 'badge-success';
  return 'badge-outline';
};

const getTagColor = (tag: string) => {
  const lowerTag = tag.toLowerCase();
  if (lowerTag.includes('headless') || lowerTag.includes('cms')) return 'badge-primary';
  if (lowerTag.includes('web') || lowerTag.includes('platform')) return 'badge-secondary';
  if (lowerTag.includes('marketing') || lowerTag.includes('automation')) return 'badge-accent';
  if (lowerTag.includes('systems')) return 'badge-success';
  return 'badge-outline';
};
---

<div 
  class="card bg-base-100 shadow-xl hover:shadow-2xl transition-all duration-300 hover:scale-[1.02] border-2 border-base-300 h-full max-w-md mx-auto" 
  data-work-card 
  data-category={category}
  data-card-id={slug}
  data-scroll-target
>
  <!-- Hero Image - consistent aspect ratio with detail page -->
  <figure class="relative h-80 w-full">
    <img transition:name={`work-img-${slug}`} src={imageSrc} alt={title} class="w-full h-full object-cover" loading="lazy" />
  </figure>
  
  <div class="card-body">
    <!-- Category Badge at Top -->
    {category && (
      <div class="mb-2">
        <span class={`badge ${getCategoryColor(category)} badge-sm font-bold text-xs uppercase`}>
          {category}
        </span>
      </div>
    )}
    
    <!-- Project Title -->
    <h2 transition:name={`work-title-${slug}`} class="text-xl font-bold mb-2 leading-tight">
      {title}
    </h2>
    
    <!-- Impact Statement - Prominent Display -->
    {impact && (
      <div class="mb-3">
        <p class="text-xs font-bold text-primary uppercase leading-snug tracking-wide">
          {impact}
        </p>
      </div>
    )}
    
    <!-- Limited Tags (2-3 with muted display) -->
    {tags.length > 0 && (
      <div class="mb-3">
        <div class="flex flex-wrap gap-1.5">
          {tags.slice(0, 3).map((tag) => (
            <span class="badge badge-ghost badge-sm text-xs opacity-60">
              {tag}
            </span>
          ))}
        </div>
      </div>
    )}
    
    <!-- Spacer to push action to bottom -->
    <div class="flex-grow"></div>
    
    <!-- Action Button -->
    <div class="card-actions justify-end mt-3">
      <a href={`/work/${slug}`} class="btn btn-primary btn-md btn-info">
        View Details
      </a>
    </div>
  </div>
</div>