---
import type { LucideIconDefinition, LucideIconName } from "../../icons/lucide";
import { lucideIcons } from "../../icons/lucide";

interface Props {
        name: LucideIconName;
        class?: string;
        strokeWidth?: number;
        title?: string;
        ariaHidden?: boolean;
}

const {
        name,
        class: className = "w-4 h-4",
        strokeWidth = 2,
        title,
        ariaHidden = true,
} = Astro.props as Props;

const icon = lucideIcons[name] as LucideIconDefinition;

if (!icon) {
        throw new Error(`Lucide icon \"${name}\" is not defined.`);
}

const labelled = Boolean(title);
---
<svg
        class:list={["lucide", `lucide-${name}`, className]}
        xmlns="http://www.w3.org/2000/svg"
        width="24"
        height="24"
        viewBox="0 0 24 24"
        fill="none"
        stroke="currentColor"
        stroke-width={strokeWidth}
        stroke-linecap="round"
        stroke-linejoin="round"
        role={labelled ? "img" : undefined}
        aria-hidden={labelled ? undefined : ariaHidden ? "true" : undefined}
>
        {title && <title>{title}</title>}
        {icon.paths?.map((d) => (
                <path d={d} />
        ))}
        {icon.circles?.map((circle) => (
                <circle cx={circle.cx} cy={circle.cy} r={circle.r} />
        ))}
</svg>
