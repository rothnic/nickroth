---
import avatarPlaceholder from "../assets/images/avatar-placeholder.svg";

type NavItem = {
	href: string;
	label: string;
};

interface Props {
	currentPath?: string;
}

const { currentPath = "/" } = Astro.props as Props;

const normalizePath = (path: string) => {
	if (!path) return "/";
	return path.length > 1 && path.endsWith("/") ? path.slice(0, -1) : path;
};

const normalizedCurrentPath = normalizePath(currentPath);

const isActive = (href: string) => {
	const normalizedHref = normalizePath(href);
	if (normalizedHref === "/") {
		return normalizedCurrentPath === "/";
	}
	return (
		normalizedCurrentPath === normalizedHref ||
		normalizedCurrentPath.startsWith(`${normalizedHref}/`)
	);
};

const topLevelNavItems: NavItem[] = [
	{ href: "/work", label: "Work" },
	{ href: "/approach", label: "Approach" },
	{ href: "/background", label: "Background" },
	{ href: "/contact", label: "Contact" },
];

const allNavItems: NavItem[] = [
	...topLevelNavItems,
	{ href: "/showcase", label: "Showcase" },
	{ href: "/project", label: "Project" },
];

const mobileLinkClass = (href: string) =>
	isActive(href) ? "active font-semibold" : "";

const topLevelLinkClass = (href: string) =>
	`btn btn-ghost ${isActive(href) ? "active" : ""}`;

const desktopLinkClass = (href: string) =>
	`px-3 py-2 rounded-lg transition-colors ${
		isActive(href) ? "bg-primary text-primary-content" : "hover:bg-base-200"
	}`;
---

<div class="navbar bg-base-100 h-16 items-center relative z-50">
	<div class="navbar-start">
		<a href="/" class={`flex items-center gap-1 px-4 py-2 text-xl font-display font-black transition-transform hover:scale-105 ${isActive('/') ? 'bg-base-200' : ''}`}>
			<span class="glitch-effect" data-text="NICK">NICK</span>
			<span class="inline-flex items-center bg-brand px-2 py-0.5 -rotate-1 border-2 border-[var(--nr-border-color)] shadow-[2px_2px_0px_0px_var(--nr-shadow-color)]">
				<span class="glitch-effect" data-text="ROTH">ROTH</span>
			</span>
		</a>
	</div>
	
	<!-- Top-level navigation - centered, visible on desktop -->
	<div class="navbar-center hidden lg:flex h-full items-center">
		<nav class="btn-group h-full items-center relative">
			{topLevelNavItems.map((item: NavItem) => (
				<a 
					href={item.href} 
					class={topLevelLinkClass(item.href)}
					transition:name={`nav-link-${item.href.slice(1)}`}
				>
					{isActive(item.href) && (
						<span 
							class="nav-active-bg" 
							transition:name="nav-active-bg"
						/>
					)}
					<span class="relative z-10">{item.label}</span>
				</a>
			))}
		</nav>
	</div>
	
	<div class="navbar-end gap-2">
		<!-- Theme switcher - hidden on mobile, visible on desktop -->
		<label class="swap swap-rotate hidden lg:flex">
			<input type="checkbox" class="theme-controller" value="neobrutalism-dark" />
			<svg class="swap-off fill-current w-6 h-6" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M5.64,17l-.71.71a1,1,0,0,0,0,1.41,1,1,0,0,0,1.41,0l.71-.71A1,1,0,0,0,5.64,17ZM5,12a1,1,0,0,0-1-1H3a1,1,0,0,0,0,2H4A1,1,0,0,0,5,12Zm7-7a1,1,0,0,0,1-1V3a1,1,0,0,0-2,0V4A1,1,0,0,0,12,5ZM5.64,7.05a1,1,0,0,0,.7.29,1,1,0,0,0,.71-.29,1,1,0,0,0,0-1.41l-.71-.71A1,1,0,0,0,4.93,6.34Zm12,.29a1,1,0,0,0,.7-.29l.71-.71a1,1,0,1,0-1.41-1.41L17,5.64a1,1,0,0,0,0,1.41A1,1,0,0,0,17.66,7.34ZM21,11H20a1,1,0,0,0,0,2h1a1,1,0,0,0,0-2Zm-9,8a1,1,0,0,0-1,1v1a1,1,0,0,0,2,0V20A1,1,0,0,0,12,19ZM18.36,17A1,1,0,0,0,17,18.36l.71.71a1,1,0,0,0,1.41,0,1,1,0,0,0,0-1.41ZM12,6.5A5.5,5.5,0,1,0,17.5,12,5.51,5.51,0,0,0,12,6.5Zm0,9A3.5,3.5,0,1,1,15.5,12,3.5,3.5,0,0,1,12,15.5Z" /></svg>
			<svg class="swap-on fill-current w-6 h-6" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M21.64,13a1,1,0,0,0-1.05-.14,8.05,8.05,0,0,1-3.37.73A8.15,8.15,0,0,1,9.08,5.49a8.59,8.59,0,0,1,.25-2A1,1,0,0,0,8,2.36,10.14,10.14,0,1,0,22,14.05,1,1,0,0,0,21.64,13Zm-9.5,6.69A8.14,8.14,0,0,1,7.08,5.22v.27A10.15,10.15,0,0,0,17.22,15.63a9.79,9.79,0,0,0,2.1-.22A8.11,8.11,0,0,1,12.14,19.73Z" /></svg>
		</label>
		
		<!-- Hamburger menu - visible on mobile -->
		<div class="dropdown dropdown-end lg:hidden">
			<div tabindex="0" role="button" class="btn btn-ghost">
				<svg class="w-5 h-5" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 17 14">
					<path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M1 1h15M1 7h15M1 13h15" />
				</svg>
			</div>
			<ul tabindex="0" class="menu menu-sm dropdown-content mt-3 z-[1] p-2 shadow bg-base-100 rounded-box w-52">
				{allNavItems.map((item: NavItem) => (
					<li>
						<a href={item.href} class={mobileLinkClass(item.href)}>{item.label}</a>
					</li>
				))}
				<li class="border-t border-base-300 mt-2 pt-2">
					<label class="swap swap-rotate justify-start">
						<input type="checkbox" class="theme-controller" value="neobrutalism-dark" />
						<span class="swap-off flex items-center gap-2">
							<svg class="fill-current w-5 h-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M5.64,17l-.71.71a1,1,0,0,0,0,1.41,1,1,0,0,0,1.41,0l.71-.71A1,1,0,0,0,5.64,17ZM5,12a1,1,0,0,0-1-1H3a1,1,0,0,0,0,2H4A1,1,0,0,0,5,12Zm7-7a1,1,0,0,0,1-1V3a1,1,0,0,0-2,0V4A1,1,0,0,0,12,5ZM5.64,7.05a1,1,0,0,0,.7.29,1,1,0,0,0,.71-.29,1,1,0,0,0,0-1.41l-.71-.71A1,1,0,0,0,4.93,6.34Zm12,.29a1,1,0,0,0,.7-.29l.71-.71a1,1,0,1,0-1.41-1.41L17,5.64a1,1,0,0,0,0,1.41A1,1,0,0,0,17.66,7.34ZM21,11H20a1,1,0,0,0,0,2h1a1,1,0,0,0,0-2Zm-9,8a1,1,0,0,0-1,1v1a1,1,0,0,0,2,0V20A1,1,0,0,0,12,19ZM18.36,17A1,1,0,0,0,17,18.36l.71.71a1,1,0,0,0,1.41,0,1,1,0,0,0,0-1.41ZM12,6.5A5.5,5.5,0,1,0,17.5,12,5.51,5.51,0,0,0,12,6.5Zm0,9A3.5,3.5,0,1,1,15.5,12,3.5,3.5,0,0,1,12,15.5Z" /></svg>
							Light Mode
						</span>
						<span class="swap-on flex items-center gap-2">
							<svg class="fill-current w-5 h-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M21.64,13a1,1,0,0,0-1.05-.14,8.05,8.05,0,0,1-3.37.73A8.15,8.15,0,0,1,9.08,5.49a8.59,8.59,0,0,1,.25-2A1,1,0,0,0,8,2.36,10.14,10.14,0,1,0,22,14.05,1,1,0,0,0,21.64,13Zm-9.5,6.69A8.14,8.14,0,0,1,7.08,5.22v.27A10.15,10.15,0,0,0,17.22,15.63a9.79,9.79,0,0,0,2.1-.22A8.11,8.11,0,0,1,12.14,19.73Z" /></svg>
							Dark Mode
						</span>
					</label>
				</li>
			</ul>
		</div>
	</div>
</div>
