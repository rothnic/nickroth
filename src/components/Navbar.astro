---
import avatarPlaceholder from '../assets/images/avatar-placeholder.svg';
import { Button } from '@/components/neobrutalism/Button';

type NavItem = {
	href: string;
	label: string;
};

interface Props {
	currentPath?: string;
}

const { currentPath = '/' } = Astro.props as Props;

const normalizePath = (path: string) => {
	if (!path) return '/';
	return path.length > 1 && path.endsWith('/') ? path.slice(0, -1) : path;
};

const normalizedCurrentPath = normalizePath(currentPath);

const isActive = (href: string) => {
	const normalizedHref = normalizePath(href);
	if (normalizedHref === '/') {
		return normalizedCurrentPath === '/';
	}
	return (
		normalizedCurrentPath === normalizedHref ||
		normalizedCurrentPath.startsWith(`${normalizedHref}/`)
	);
};

const navItems: NavItem[] = [
	{ href: '/work', label: 'Work' },
	{ href: '/approach', label: 'Approach' },
	{ href: '/background', label: 'Background' },
	{ href: '/contact', label: 'Contact' },
];
---

<!-- Neobrutalism Navigation -->
<nav class="bg-white border-b-[4px] border-black shadow-[0_4px_0px_0px_#000] sticky top-0 z-50">
  <div class="max-w-7xl mx-auto px-4">
    <div class="flex items-center justify-between h-16">
      <!-- Logo/Brand -->
      <a 
        href="/" 
        class={`flex items-center space-x-3 font-bold text-xl uppercase ${isActive('/') ? 'text-black' : 'text-black'}`}
      >
        <div class="w-8 h-8 border-[3px] border-black shadow-[3px_3px_0px_0px_#000] overflow-hidden bg-yellow-400">
          <img src={avatarPlaceholder.src} alt="Nick Roth" loading="lazy" class="w-full h-full object-cover" />
        </div>
        <span>Nick Roth</span>
      </a>

      <!-- Desktop Navigation -->
      <div class="hidden md:flex items-center space-x-2">
        {navItems.map((item: NavItem) => (
          <Button 
            variant={isActive(item.href) ? "primary" : "outline"} 
            size="sm"
            client:load
          >
            <a href={item.href} class="no-underline text-inherit font-bold uppercase">
              {item.label}
            </a>
          </Button>
        ))}
      </div>

      <!-- Mobile menu button and dark mode toggle -->
      <div class="flex items-center space-x-2">
        <!-- Dark mode toggle -->
        <label class="cursor-pointer border-[3px] border-black shadow-[3px_3px_0px_0px_#000] bg-yellow-400 p-2 hover:shadow-[1px_1px_0px_0px_#000] hover:translate-x-[2px] hover:translate-y-[2px] transition-all duration-150">
          <input type="checkbox" class="theme-controller hidden" value="dark" />
          <svg class="swap-off fill-current w-5 h-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
            <path d="M5.64,17l-.71.71a1,1,0,0,0,0,1.41,1,1,0,0,0,1.41,0l.71-.71A1,1,0,0,0,5.64,17ZM5,12a1,1,0,0,0-1-1H3a1,1,0,0,0,0,2H4A1,1,0,0,0,5,12Zm7-7a1,1,0,0,0,1-1V3a1,1,0,0,0-2,0V4A1,1,0,0,0,12,5ZM5.64,7.05a1,1,0,0,0,.7.29,1,1,0,0,0,.71-.29,1,1,0,0,0,0-1.41l-.71-.71A1,1,0,0,0,4.93,6.34Zm12,.29a1,1,0,0,0,.7-.29l.71-.71a1,1,0,1,0-1.41-1.41L17,5.64a1,1,0,0,0,0,1.41A1,1,0,0,0,17.66,7.34ZM21,11H20a1,1,0,0,0,0,2h1a1,1,0,0,0,0-2Zm-9,8a1,1,0,0,0-1,1v1a1,1,0,0,0,2,0V20A1,1,0,0,0,12,19ZM18.36,17A1,1,0,0,0,17,18.36l.71.71a1,1,0,0,0,1.41,0,1,1,0,0,0,0-1.41ZM12,6.5A5.5,5.5,0,1,0,17.5,12,5.51,5.51,0,0,0,12,6.5Zm0,9A3.5,3.5,0,1,1,15.5,12,3.5,3.5,0,0,1,12,15.5Z" />
          </svg>
          <svg class="swap-on fill-current w-5 h-5 hidden" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
            <path d="M21.64,13a1,1,0,0,0-1.05-.14,8.05,8.05,0,0,1-3.37.73A8.15,8.15,0,0,1,9.08,5.49a8.59,8.59,0,0,1,.25-2A1,1,0,0,0,8,2.36,10.14,10.14,0,1,0,22,14.05,1,1,0,0,0,21.64,13Zm-9.5,6.69A8.14,8.14,0,0,1,7.08,5.22v.27A10.15,10.15,0,0,0,17.22,15.63a9.79,9.79,0,0,0,2.1-.22A8.11,8.11,0,0,1,12.14,19.73Z" />
          </svg>
        </label>

        <!-- Mobile menu button -->
        <Button variant="primary" size="sm" className="md:hidden" client:load>
          <button id="mobile-menu-button" type="button" class="p-1" aria-label="Toggle mobile menu">
            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
            </svg>
          </button>
        </Button>
      </div>
    </div>

    <!-- Mobile menu -->
    <div id="mobile-menu" class="md:hidden hidden border-t-[3px] border-black bg-white">
      <div class="py-4 space-y-2">
        {navItems.map((item: NavItem) => (
          <Button 
            variant={isActive(item.href) ? "primary" : "outline"} 
            size="sm"
            className="w-full justify-start"
            client:load
          >
            <a href={item.href} class="no-underline text-inherit w-full text-left font-bold uppercase">
              {item.label}
            </a>
          </Button>
        ))}
      </div>
    </div>
  </div>
</nav>

<script>
  // Mobile menu toggle functionality
  document.addEventListener('DOMContentLoaded', function() {
    const menuButton = document.getElementById('mobile-menu-button');
    const mobileMenu = document.getElementById('mobile-menu');
    
    if (menuButton && mobileMenu) {
      menuButton.addEventListener('click', function() {
        mobileMenu.classList.toggle('hidden');
      });
    }
  });
</script>
