---
import avatarPlaceholder from '../assets/images/avatar-placeholder.svg';

type NavItem = {
  href: string;
  label: string;
};

interface Props {
  currentPath?: string;
}

const { currentPath = '/' } = Astro.props as Props;

const normalizePath = (path: string) => {
  if (!path) return '/';
  return path.length > 1 && path.endsWith('/') ? path.slice(0, -1) : path;
};

const normalizedCurrentPath = normalizePath(currentPath);

const isActive = (href: string) => {
  const normalizedHref = normalizePath(href);
  if (normalizedHref === '/') {
    return normalizedCurrentPath === '/';
  }
  return (
    normalizedCurrentPath === normalizedHref ||
    normalizedCurrentPath.startsWith(`${normalizedHref}/`)
  );
};

const navItems: NavItem[] = [
  { href: '/work', label: 'Work' },
  { href: '/approach', label: 'Approach' },
  { href: '/background', label: 'Background' },
  { href: '/contact', label: 'Contact' },
];

const mobileLinkClass = (href: string) =>
  `rounded-xl px-4 py-2 text-sm font-semibold transition-colors duration-200 ${
    isActive(href)
      ? 'bg-base-content/10 text-base-content'
      : 'text-base-content/70 hover:bg-base-content/5 hover:text-base-content'
  }`;

const desktopLinkClass = (href: string) =>
  `relative inline-flex items-center rounded-full px-4 py-2 text-sm font-medium transition-all duration-300 ${
    isActive(href)
      ? 'text-base-content shadow-[inset_0_0_0_1px_rgba(12,27,37,0.12)] dark:shadow-[inset_0_0_0_1px_rgba(148,163,184,0.35)] bg-base-content/5'
      : 'text-base-content/70 hover:text-base-content hover:bg-base-content/5'
  }`;
---

<header class="sticky top-6 z-40 px-4 sm:px-6 lg:px-8">
  <div class="mx-auto max-w-6xl">
    <div class="glass-panel relative flex items-center justify-between gap-4 rounded-full border border-base-content/10 bg-base-100/80 px-4 py-3 shadow-lg transition-all duration-300 hover:shadow-xl lg:px-6">
      <div class="flex items-center gap-3">
        <a href="/" class="relative flex items-center gap-3 rounded-full px-2 py-1">
          <span class="relative inline-flex h-11 w-11 items-center justify-center overflow-hidden rounded-full border border-base-content/10 bg-base-100 shadow-sm">
            <img src={avatarPlaceholder.src} alt="Nick Roth" loading="lazy" class="h-full w-full object-cover" />
          </span>
          <div class="hidden flex-col leading-tight sm:flex">
            <span class="text-xs font-semibold uppercase tracking-[0.28em] text-base-content/60">Product Systems</span>
            <span class={`text-base font-semibold ${isActive('/') ? 'text-base-content' : 'text-base-content/80'}`}>
              Nick Roth
            </span>
          </div>
        </a>
      </div>

      <nav class="hidden items-center gap-2 lg:flex" aria-label="Primary navigation">
        {navItems.map((item) => (
          <a href={item.href} class={desktopLinkClass(item.href)}>{item.label}</a>
        ))}
      </nav>

      <div class="flex items-center gap-2">
        <label class="swap swap-rotate text-base-content/70 hover:text-base-content">
          <input type="checkbox" class="theme-controller" value="dark" />
          <svg class="swap-off h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor">
            <path d="M5.64,17l-.71.71a1,1,0,0,0,1.41,1.41l.71-.71A1,1,0,1,0,5.64,17ZM5,12a1,1,0,0,0-1-1H3a1,1,0,0,0,0,2H4A1,1,0,0,0,5,12Zm7-7a1,1,0,0,0,1-1V3a1,1,0,0,0-2,0V4A1,1,0,0,0,12,5ZM5.64,7.05a1,1,0,0,0,.7.29,1,1,0,0,0,.71-.29,1,1,0,0,0,0-1.41l-.71-.71A1,1,0,0,0,4.93,6.34Zm12,.29a1,1,0,0,0,.7-.29l.71-.71a1,1,0,1,0-1.41-1.41L17,5.64A1,1,0,0,0,17,7.05Zm3,4H20a1,1,0,0,0,0,2h1a1,1,0,0,0,0-2Zm-9,8a1,1,0,0,0-1,1v1a1,1,0,0,0,2,0V20A1,1,0,0,0,12,19ZM18.36,17A1,1,0,0,0,17,18.36l.71.71a1,1,0,1,0,1.41-1.41ZM12,6.5A5.5,5.5,0,1,0,17.5,12,5.51,5.51,0,0,0,12,6.5Zm0,9A3.5,3.5,0,1,1,15.5,12,3.5,3.5,0,0,1,12,15.5Z" />
          </svg>
          <svg class="swap-on h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor">
            <path d="M21.64,13a1,1,0,0,0-1.05-.14,8.05,8.05,0,0,1-3.37.73A8.15,8.15,0,0,1,9.08,5.49a8.59,8.59,0,0,1,.25-2A1,1,0,0,0,8,2.36,10.14,10.14,0,1,0,22,14.05,1,1,0,0,0,21.64,13Zm-9.5,6.69A8.14,8.14,0,0,1,7.08,5.22v.27A10.15,10.15,0,0,0,17.22,15.63a9.79,9.79,0,0,0,2.1-.22A8.11,8.11,0,0,1,12.14,19.73Z" />
          </svg>
        </label>

        <div class="lg:hidden">
          <div class="dropdown dropdown-end">
            <label tabindex="0" class="btn btn-ghost btn-circle border border-base-content/10 bg-base-100/60 text-base-content/70 hover:border-base-content/20 hover:bg-base-100/80">
              <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 17 14" aria-hidden="true">
                <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M1 1h15M1 7h15M1 13h15" />
              </svg>
            </label>
            <ul tabindex="0" class="menu menu-sm dropdown-content mt-3 w-60 rounded-2xl border border-base-content/10 bg-base-100/90 p-3 shadow-xl backdrop-blur">
              {navItems.map((item) => (
                <li>
                  <a href={item.href} class={mobileLinkClass(item.href)}>{item.label}</a>
                </li>
              ))}
            </ul>
          </div>
        </div>
      </div>
    </div>
  </div>
</header>
