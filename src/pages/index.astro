---
import BaseLayout from '../layouts/BaseLayout.astro';
import HeroRetro from '../components/HeroRetro.astro';
import CapabilityCardRetro from '../components/CapabilityCardRetro.astro';
import WorkCardRetro from '../components/WorkCardRetro.astro';
import { getCollection } from 'astro:content';
import { Card } from '@/components/retroui/Card';
import { Badge } from '@/components/retroui/Badge';
import { Button } from '@/components/retroui/Button';

const capabilities = await getCollection('capabilities');
const sortedCapabilities = capabilities
  .sort((a, b) => a.data.order - b.data.order);

const work = await getCollection('work');
const featuredWork = work
  .filter(w => w.data.featured)
  .sort((a, b) => {
    const aDate = a.data.endDate || new Date();
    const bDate = b.data.endDate || new Date();
    return bDate.getTime() - aDate.getTime();
  })
  .slice(0, 2);

const notes = await getCollection('notes');
const recentNotes = notes
  .sort((a, b) => new Date(b.data.publishDate).getTime() - new Date(a.data.publishDate).getTime())
  .slice(0, 3);
---

<BaseLayout>
  <HeroRetro />
  
  <!-- Capabilities Section -->
  <section class="py-20 bg-base-200">
    <div class="container mx-auto px-4">
      <h2 class="text-4xl font-bold text-center mb-12">Core Capabilities</h2>
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 max-w-6xl mx-auto">
        {sortedCapabilities.map((capability) => (
          <CapabilityCardRetro
            title={capability.data.title}
            description={capability.data.description}
            icon={capability.data.icon}
          />
        ))}
      </div>
    </div>
  </section>

  <!-- Featured Work Section -->
  <section class="py-20">
    <div class="container mx-auto px-4">
      <div class="text-center mb-12">
        <h2 class="text-4xl font-bold mb-4">RECENT WORK</h2>
        <p class="text-lg text-base-content/70">CASE STUDIES SHOWCASING THE SYSTEMATIC APPROACH FROM DISCOVERY THROUGH DELIVERY.</p>
      </div>
      {featuredWork.length > 0 ? (
        <div class="flex flex-wrap justify-center gap-8 mb-12">
          {featuredWork.map((project) => (
            <WorkCardRetro
              title={project.data.title}
              description={project.data.description}
              image={project.data.image}
              slug={project.slug}
              company={project.data.company}
              role={project.data.role}
              impact={project.data.impact}
              tags={project.data.tags}
              stack={project.data.stack}
            />
          ))}
        </div>
      ) : null}
      
      <div class="text-center">
        <Button variant="default" size="lg" client:load>
          <a href="/work" class="no-underline text-inherit">VIEW ALL WORK â†’</a>
        </Button>
      </div>
    </div>
  </section>

  <!-- Recent Updates Section -->
  {recentNotes.length > 0 && (
    <section class="py-20 bg-base-200">
      <div class="container mx-auto px-4">
        <h2 class="text-4xl font-bold text-center mb-12">Recent Updates</h2>
        <div class="grid grid-cols-1 md:grid-cols-3 gap-6 max-w-6xl mx-auto">
          {recentNotes.map((note) => (
            <Card className="hover:translate-y-1 transition-transform duration-200" client:load>
              <Card.Content className="p-6">
                <Card.Title className="text-lg mb-2">{note.data.title}</Card.Title>
                <p class="text-sm opacity-75 mb-2">
                  {new Date(note.data.publishDate).toLocaleDateString()}
                </p>
                <Card.Description className="text-sm mb-3">{note.data.description}</Card.Description>
                <div class="flex flex-wrap gap-1">
                  {note.data.tags.slice(0, 3).map((tag: string) => (
                    <Badge variant="outline" size="sm">{tag}</Badge>
                  ))}
                </div>
              </Card.Content>
            </Card>
          ))}
        </div>
      </div>
    </section>
  )}
</BaseLayout>